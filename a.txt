model = load("data/trained_model.pkl", mmap_mode="r")
data = []
result = []
car_letters = sorted(car_letters ,key=lambda x: x[1], reverse = True)
for i in car_letters:
    img = cv.resize(i[0],(32,64))
    gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
    describtor= hog(gray,orientations=9,pixels_per_cell=(8,8), cells_per_block=(1, 1))
    data.append((describtor).flatten())

df_test = pd.DataFrame(data)
df_test = df_test.dropna(axis=1)
print(model.predict(df_test))








<script>
        function uploadImage() {
            var fileInput = document.getElementById('fileInput');
            var file = fileInput.files[0];
    
            var formData = new FormData();
            formData.append('file', file);
    
            fetch('/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.result);
                // Display the processed image on the page
                var resultDiv = document.getElementById('result');
                var imgElement = document.createElement('img');
    
                // Decode the base64 image data
                var decodedImageData = atob(data.plate_image);
    
                // Create a Uint8Array from the decoded image data
                var uint8Array = new Uint8Array(decodedImageData.length);
                for (var i = 0; i < decodedImageData.length; i++) {
                    uint8Array[i] = decodedImageData.charCodeAt(i);
                }
    
                // Create a Blob from the Uint8Array
                var blob = new Blob([uint8Array], { type: 'image/jpeg' });
    
                // Create a data URL from the Blob
                var imageUrl = URL.createObjectURL(blob);
    
                // Set the src attribute of the img element
                imgElement.src = imageUrl;
    
                resultDiv.innerHTML = ''; // Clear previous results
                resultDiv.appendChild(imgElement);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    </script>